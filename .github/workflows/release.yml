name: Release

on:
  push:
    # paths: 
    #   - package.json
    branches:
      - chore/verify-release-job
      
jobs:
  verify-release:
    name: Verify Release
    runs-on: ubuntu-latest
    environment: 'prod'
    outputs:
      release: ${{ steps.verify-release.outputs.release }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Verify Release
        id: verify-release
        run: |
          export current_tag=$(git tag --sort=committerdate | grep -E '[0-9]' | tail -1)
          echo "Current tag: $current_tag"
          export current_version=$(jq .version ./package.json | tr -d '"')
          echo "Current version: $current_version"
          if [ "$(jq .version ./package.json | tr -d '"')" != "$(git tag --sort=committerdate | grep -E '[0-9]' | tail -1)" ]; then
            echo "Release version does not match latest tag. Proceeding with release."
            echo "release=true" >> "$GITHUB_OUTPUT"
          else
            echo "Release version matches latest tag. Not going to proceed with release."
            echo "release=false" >> "$GITHUB_OUTPUT"
          fi
  build-and-publish:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    environment: 'prod'
    needs: verify-release
    if: needs.verify-release.outputs.release == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Test
        run: |
          echo "Test"
      # - uses: prefecthq/actions-release-ui-components@main
      #   with:
      #     NPM_TOKEN: ${{ secrets.PREFECT_UI_COMPONENTS_NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NEBULA_UI_ACTIONS_RW_TOKEN: ${{ secrets.NEBULA_UI_ACTIONS_RW }}
      #     PREFECT_OSS_ACTIONS_RW_TOKEN: ${{ secrets.PREFECT_ACTIONS_RW }}
